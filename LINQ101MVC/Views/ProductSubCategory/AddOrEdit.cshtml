@using System.Configuration
@model LINQ101MVC.ViewModels.ProductSubCategoryViewModel

@{ ViewBag.Title = "Add or Edit Product Subcategory"; }

@if (Model != null)
{
    ViewBag.Title = string.Concat(Model.ProductSubcategory.ProductCategoryID != 0 ? "Edit" : "New", " Product Subcategory");
}

<h2>@ViewBag.Title</h2>
<hr/>

@if (Model != null)
{

    Model.ProductSubcategory.ModifiedDate = Model.ProductSubcategory.ModifiedDate == default(DateTime) ? DateTime.Now : Model.ProductSubcategory.ModifiedDate;

    using (@Html.BeginForm("Save", "ProductSubCategory", FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(s => s.ProductSubcategory.ProductCategoryID)
            @Html.DropDownListFor(s => s.ProductSubcategory.ProductCategoryID, new SelectList(Model.ProductCategories, "ProductCategoryID", "Name"), "", new { @class = "form-control", autofocus = true })
            @Html.ValidationMessageFor(s => s.ProductSubcategory.ProductCategoryID)
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.ProductSubcategory.Name)
            @Html.TextBoxFor(s => s.ProductSubcategory.Name, new {@class="form-control"})
            @Html.ValidationMessageFor(s => s.ProductSubcategory.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.ProductSubcategory.ModifiedDate)
            @Html.TextBoxFor(s => s.ProductSubcategory.ModifiedDate, new { @class = "form-control", disabled = true })
        </div>

        @Html.AntiForgeryToken()
        @Html.HiddenFor(s => s.ProductSubcategory.ProductSubcategoryID)
        <div class="form-group">
            <button type="submit" class="btn btn-primary"> Save </button>
            <button type="button" class="btn btn-primary" onclick="history.back();"> Cancel </button>
        </div>
    }
}
else
{
    <p class="bg-warning">@ConfigurationManager.AppSettings["NoInfoMsg"]</p>
}
<!-- Todo: Enable Client side validation -->
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
